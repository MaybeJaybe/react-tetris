{"version":3,"sources":["actions/index.js","utils/index.js","reducers/game-reducer.js","reducers/index.js","components/GridSquare.js","components/GridBoard.js","components/NextBlock.js","components/ScoreBoard.js","components/Controls.js","components/MessagePopup.js","App.js","reportWebVitals.js","index.js"],"names":["PAUSE","RESUME","MOVE_LEFT","MOVE_RIGHT","ROTATE","MOVE_DOWN","GAME_OVER","RESTART","moveLeft","type","moveRight","rotate","moveDown","gridDefault","array","row","push","col","shapes","randomShape","min","max","length","Math","floor","random","defaultState","grid","shape","rotation","x","y","nextShape","isRunning","score","speed","gameOver","nextRotation","canMoveTo","currentShape","gridWidth","gridHeight","proposedX","proposedY","possibleRow","undefined","addBlockToGrid","blockOffGrid","block","newGrid","checkRows","completedRows","indexOf","splice","unshift","Array","fill","gameReducer","state","action","newRotation","maybeY","obj","newState","console","log","reducers","combineReducers","game","GridSquare","props","classes","color","className","GridBoard","requestRef","useRef","lastUpdateTimeRef","progressTimeRef","dispatch","useDispatch","useSelector","blockColor","gridSquares","map","rowArray","square","blockX","blockY","k","update","time","current","requestAnimationFrame","deltaTime","useEffect","cancelAnimationFrame","NextBlock","ScoreBoard","onClick","e","Controls","handleKeyboardActions","event","keyCode","preventDefault","document","addEventListener","removeEventListener","disabled","MessagePopup","message","isHidden","store","createStore","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"mNAAaA,EAAQ,QACRC,EAAS,SACTC,EAAY,YACZC,EAAa,aACbC,EAAS,SACTC,EAAY,YACZC,EAAY,YACZC,EAAU,UAQVC,EAAW,WACpB,MAAO,CAAEC,KAAMP,IAENQ,EAAY,WACrB,MAAO,CAAED,KAAMN,IAENQ,EAAS,WAClB,MAAO,CAAEF,KAAML,IAENQ,EAAW,WACpB,MAAO,CAAEH,KAAMJ,I,OCrBNQ,EAAc,WAKvB,IAJA,IAEMC,EAAQ,GAELC,EAAM,EAAGA,EAJL,GAIiBA,IAAO,CACjCD,EAAME,KAAK,IACX,IAAK,IAAIC,EAAM,EAAGA,EALT,GAKqBA,IAC1BH,EAAMC,GAAKC,KAAK,GAGxB,OAAOF,GAGEI,EAAS,CAElB,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,KAGT,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,IAER,CAAC,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,KAGT,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,IAER,CAAC,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,IAER,CAAC,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,IAER,CAAC,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,KAGT,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,IAER,CAAC,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,IAER,CAAC,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,IAER,CAAC,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,KAGT,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,IAER,CAAC,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,IAER,CAAC,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,IAER,CAAC,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,KAGT,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,IAER,CAAC,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,KAGT,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,IAER,CAAC,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,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","file":"static/js/main.55862178.chunk.js","sourcesContent":["export const PAUSE = \"PAUSE\"\nexport const RESUME = \"RESUME\"\nexport const MOVE_LEFT = \"MOVE_LEFT\"\nexport const MOVE_RIGHT = \"MOVE_RIGHT\"\nexport const ROTATE = \"ROTATE\"\nexport const MOVE_DOWN = \"MOVE_DOWN\"\nexport const GAME_OVER = \"GAME_OVER\"\nexport const RESTART = \"RESTART\"\n\nexport const pause = () => {\n    return { type: PAUSE }\n}\nexport const resume = () => {\n    return { type: RESUME }\n}\nexport const moveLeft = () => {\n    return { type: MOVE_LEFT }\n}\nexport const moveRight = () => {\n    return { type: MOVE_RIGHT }\n}\nexport const rotate = () => {\n    return { type: ROTATE }\n}\nexport const moveDown = () => {\n    return { type: MOVE_DOWN }\n}\nexport const restart = () => {\n    return { type: RESTART }\n}","export const random = (min, max) => {\n    return Math.floor(Math.random() * (max - min + 1)) + min\n}\n\nexport const gridDefault = () => {\n    const rows = 18\n    const cols = 10\n    const array = []\n\n    for (let row = 0; row < rows; row++) {\n        array.push([])\n        for (let col = 0; col < cols; col++) {\n            array[row].push(0)\n        }\n    }\n    return array\n}\n\nexport const shapes = [\n    // blank\n    [[[0,0,0,0],\n      [0,0,0,0],\n      [0,0,0,0],\n      [0,0,0,0]]],\n\n    // I\n    [[[0,0,0,0],\n      [1,1,1,1],\n      [0,0,0,0],\n      [0,0,0,0]],\n\n     [[0,1,0,0],\n      [0,1,0,0],\n      [0,1,0,0],\n      [0,1,0,0]]],\n\n    // T\n    [[[0,0,0,0],\n      [1,1,1,0],\n      [0,1,0,0],\n      [0,0,0,0]],\n\n     [[0,1,0,0],\n      [1,1,0,0],\n      [0,1,0,0],\n      [0,0,0,0]],\n\n     [[0,1,0,0],\n      [1,1,1,0],\n      [0,0,0,0],\n      [0,0,0,0]],\n  \n     [[0,1,0,0],\n      [0,1,1,0],\n      [0,1,0,0],\n      [0,0,0,0]]],\n\n    // L\n    [[[0,0,0,0],\n      [1,1,1,0],\n      [1,0,0,0],\n      [0,0,0,0]],\n\n     [[1,1,0,0],\n      [0,1,0,0],\n      [0,1,0,0],\n      [0,0,0,0]],\n\n     [[0,0,1,0],\n      [1,1,1,0],\n      [0,0,0,0],\n      [0,0,0,0]],\n\n     [[0,1,0,0],\n      [0,1,0,0],\n      [0,1,1,0],\n      [0,0,0,0]]],\n\n    // J\n    [[[1,0,0,0],\n      [1,1,1,0],\n      [0,0,0,0],\n      [0,0,0,0]],\n\n     [[0,1,1,0],\n      [0,1,0,0],\n      [0,1,0,0],\n      [0,0,0,0]],\n\n     [[0,0,0,0],\n      [1,1,1,0],\n      [0,0,1,0],\n      [0,0,0,0]],\n\n     [[0,1,0,0],\n      [0,1,0,0],\n      [1,1,0,0],\n      [0,0,0,0]]],\n\n    // Z\n    [[[0,0,0,0],\n      [1,1,0,0],\n      [0,1,1,0],\n      [0,0,0,0]],\n\n     [[0,0,0,0],\n      [0,0,1,0],\n      [0,1,1,0],\n      [0,1,0,0]]],\n\n    // S\n    [[[0,0,0,0],\n      [0,1,1,0],\n      [1,1,0,0],\n      [0,0,0,0]],\n\n     [[0,1,0,0],\n      [0,1,1,0],\n      [0,0,1,0],\n      [0,0,0,0]]],\n\n    // O\n    [[[0,0,0,0],\n      [0,1,1,0],\n      [0,1,1,0],\n      [0,0,0,0]]]\n]\n\nexport const randomShape = () => {\n    return random(1, shapes.length - 1)\n}\n\nexport const defaultState = () => {\n    return {\n        grid: gridDefault(),\n        shape: randomShape(),\n        rotation: 0,\n        x: 5,\n        y: -4,\n        nextShape: randomShape(),\n        isRunning: true,\n        score: 0,\n        speed: 1000,\n        gameOver: false,\n    }\n}\n\nexport const nextRotation = (shape, rotation) => {\n    return (rotation + 1) % shapes[shape].length\n}\n\nexport const canMoveTo = (shape, grid, x, y, rotation) => {\n    const currentShape = shapes[shape][rotation]\n    const gridWidth = grid[0].length - 1\n    const gridHeight = grid.length - 1\n\n    for (let row = 0; row < currentShape.length; row++) {\n        for (let col = 0; col < currentShape[row].length; col++) {\n            if (currentShape[row][col] !== 0) {\n                const proposedX = col + x\n                const proposedY = row + y\n                const possibleRow = grid[proposedY]\n\n                if (proposedX < 0 || proposedX > gridWidth || proposedY > gridHeight) {\n                    return false\n                } else if (possibleRow !== undefined) {\n                    if (possibleRow[proposedX] !== 0) {\n                        return false\n                    }\n                }\n            }\n        }\n    }\n    return true\n}\n\nexport const addBlockToGrid = (shape, grid, x, y, rotation) => {\n    let blockOffGrid = false\n    const block = shapes[shape][rotation];\n    const newGrid = [...grid];\n    for (let row = 0; row < block.length; row++) {\n        for (let col = 0; col < block[row].length; col++) {\n            if (block[row][col]) {\n                const yIndex = row + y\n                if (yIndex < 0) {\n                    blockOffGrid = true\n                } else {\n                    newGrid[row + y][col + x] = shape;\n                }\n            }\n        }\n    }\n    return { grid: newGrid, gameOver: blockOffGrid }\n}\n\nexport const checkRows = (grid) => {\n    const points = [0, 40, 100, 300, 1200]\n    let completedRows = 0\n    for (let row = 0; row < grid.length; row++) {\n        if (grid[row].indexOf(0) === -1) {\n            completedRows += 1\n            grid.splice(row, 1)\n            grid.unshift(Array(10).fill(0))\n        }\n    }\n    return points[completedRows]\n}","import { PAUSE, RESUME, MOVE_LEFT, MOVE_RIGHT, ROTATE, MOVE_DOWN, GAME_OVER, RESTART } from '../actions'\nimport { defaultState, nextRotation, canMoveTo, addBlockToGrid, checkRows, randomShape } from '../utils'\n\nconst gameReducer = (state = defaultState(), action) => {\n    const { shape, grid, x, y, rotation, nextShape, score, isRunning } = state\n\n    switch(action.type) {\n        case PAUSE:\n            return { ...state, isRunning: false }\n\n        case RESUME:\n            return { ...state, isRunning: true }\n\n        case MOVE_LEFT:\n            if (canMoveTo(shape, grid, x - 1, y, rotation)) {\n                return { ...state, x: x - 1 }\n            }\n            return state\n\n        case MOVE_RIGHT:\n            if (canMoveTo(shape, grid, x + 1, y, rotation)) {\n                return { ...state, x: x + 1 }\n            }\n            return state\n\n        case ROTATE:\n            const newRotation = nextRotation(shape, rotation)\n            if (canMoveTo(shape, grid, x, y, newRotation)) {\n                return { ...state, rotation: newRotation }\n            }\n            return state\n\n        case MOVE_DOWN:\n            const maybeY = y + 1\n            if (canMoveTo(shape, grid, x, maybeY, rotation)) {\n                return { ...state, y: maybeY }\n            }\n            const obj = addBlockToGrid(shape, grid, x, y, rotation)\n            const newGrid = obj.grid\n            const gameOver = obj.gameOver\n\n            if (gameOver) {\n                const newState = { ...state }\n                newState.shape = 0\n                newState.grid = newGrid\n                return { ...state, gameOver: true }\n            }\n            \n            const newState = defaultState()\n            newState.grid = newGrid\n            newState.shape = nextShape\n            newState.nextShape = randomShape()\n            newState.score = score\n            newState.isRunning = isRunning\n\n            if (!canMoveTo(nextShape, newGrid, 0, 4, 0)) {\n                console.log(\"Game Over\")\n                newState.shape = 0\n                return { ...state, gameOver: true }\n            }\n            newState.score = score + checkRows(newGrid)\n            return newState\n\n        case GAME_OVER:\n            return state\n\n        case RESTART:\n            return defaultState()\n\n        default:\n            return state\n    }\n}\nexport default gameReducer","import { combineReducers } from 'redux'\nimport gameReducer from './game-reducer'\n\nconst reducers = combineReducers({\n    game: gameReducer\n})\nexport default reducers","import React from 'react'\n\nexport default function GridSquare(props) {\n    const classes = `grid-square color-${props.color}`\n    return <div className={classes} />\n}","import React, { useEffect, useRef } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { shapes } from '../utils';\nimport { moveDown } from '../actions';\nimport GridSquare from './GridSquare';\n\nexport default function GridBoard(props) {\n\n    const requestRef = useRef()\n    const lastUpdateTimeRef = useRef(0)\n    const progressTimeRef = useRef(0)\n    const dispatch = useDispatch()\n\n    const game = useSelector((state) => state.game)\n    const { grid, shape, rotation, x, y, isRunning, speed } = game\n    const block = shapes[shape][rotation]\n    const blockColor = shape\n    const gridSquares = grid.map((rowArray, row) => {\n        return rowArray.map((square, col) => {\n            const blockX = col - x\n            const blockY = row - y\n            let color = square\n            if (blockX >= 0 && blockX < block.length && blockY >= 0 && blockY < block.length) {\n                color = block[blockY][blockX] === 0 ? color : blockColor\n            }\n            const k = row * grid[0].length + col;\n            return <GridSquare key={k} color={color} />\n        })\n    })\n\n    const update = (time) => {\n        requestRef.current = requestAnimationFrame(update)\n        if (!isRunning) {\n            return\n        }\n        if (!lastUpdateTimeRef.current) {\n            lastUpdateTimeRef.current = time\n        }\n        const deltaTime = time - lastUpdateTimeRef.current\n        progressTimeRef.current += deltaTime\n        if (progressTimeRef.current > speed) {\n            dispatch(moveDown())\n            progressTimeRef.current = 0\n        }\n        lastUpdateTimeRef.current = time\n    }\n\n    useEffect(() => {\n        requestRef.current = requestAnimationFrame(update)\n        return () => cancelAnimationFrame(requestRef.current)\n    }, [isRunning])\n\n    return (\n        <div className='grid-board'>\n            {gridSquares}\n        </div>\n    )\n}","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { shapes } from '../utils';\nimport GridSquare from './GridSquare';\n\nexport default function NextBlock(props) {\n    const nextShape = useSelector((state) => state.game.nextShape)\n    const box = shapes[nextShape][0]\n    const grid = box.map((rowArray, row) => {\n        return rowArray.map((square, col) => {\n            return <GridSquare key={`${row}${col}`} color={square === 0 ? 0 : nextShape} />\n        })\n    })\n\n    return (\n        <div className=\"next-block\">\n            {grid}\n        </div>\n    )\n}","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { pause, resume, restart } from '../actions';\n\nexport default function ScoreBoard(props) {\n    const dispatch = useDispatch()\n    const game = useSelector((state) => state.game)\n    const { score, isRunning, gameOver } = game\n\n    return (\n        <div className=\"score-board\">\n            <div>Score:</div>\n            <div>{ score }</div>\n            <div>Level:</div>\n            <div>1</div>\n            {/* if implementing key listener events, spacebar is 32, escape is 27 */}\n            <button className=\"score-board-button\" onClick={(e) => {\n                if (gameOver) { return }\n                if (isRunning) {\n                    dispatch(pause())\n                } else {\n                    dispatch(resume())\n                }\n            }}>{isRunning ? 'Pause' : 'Play'}</button>\n\n            <button className=\"score-board-button\" onClick={(e) => {\n                dispatch(restart())\n            }}>Restart</button>\n        </div>\n    )\n}","import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { moveLeft, moveRight, rotate, moveDown } from '../actions'\n\nexport default function Controls(props) {\n    const dispatch = useDispatch()\n    const isRunning = useSelector((state) => state.game.isRunning)\n    const gameOver = useSelector((state) => state.game.gameOver)\n\n    const handleKeyboardActions = (event) => {\n        if (!isRunning || gameOver) { return }\n        switch (event.keyCode) {\n            //left arrow and a key\n            case 37:\n                if (!isRunning || gameOver) { return }\n                else {\n                    dispatch(moveLeft());\n                }\n                break;\n            case 65:\n                if (!isRunning || gameOver) { return }\n                else {\n                    dispatch(moveLeft());\n                }\n                break;\n            //right arrow and d key\n            case 39:\n                if (!isRunning || gameOver) { return }\n                else { \n                    dispatch(moveRight());\n                }\n                break;\n            case 68:\n                if (!isRunning || gameOver) { return }\n                else {\n                    dispatch(moveRight());\n                }\n                break;\n            //up arrow and w key\n            case 38:\n                event.preventDefault();\n                dispatch(rotate());\n                break;\n            case 87:\n                event.preventDefault();\n                dispatch(rotate());\n                break;\n            //down arrow and s key\n            case 40:\n                event.preventDefault();\n                dispatch(moveDown());\n                break;\n            case 83:\n                event.preventDefault();\n                dispatch(moveDown());\n                break;\n\n            default:\n                return\n        }\n    };\n    useEffect(() => {\n        document.addEventListener('keydown', handleKeyboardActions)\n        return () => {\n            document.removeEventListener('keydown', () => {console.log(\"removed\")});\n        }\n    }, [handleKeyboardActions])\n\n    return (\n        <div className=\"controls\">\n            <button disabled={!isRunning || gameOver} className=\"control-button\" onClick={(e) => {\n                if (!isRunning || gameOver) { return }\n                dispatch(moveLeft())\n            }}>Left</button>\n            <button disabled={!isRunning || gameOver} className=\"control-button\" onClick={(e) => {\n                if (!isRunning || gameOver) { return }\n                dispatch(moveRight())\n            }}>Right</button>\n            <button disabled={!isRunning || gameOver} className=\"control-button\" onClick={(e) => {\n                if (!isRunning || gameOver) { return }\n                dispatch(rotate())\n            }}>Rotate</button>\n            <button disabled={!isRunning || gameOver} className=\"control-button\" onClick={(e) => {\n                if (!isRunning || gameOver) { return }\n                dispatch(moveDown())\n            }}>Down</button>\n        </div>\n\n    )\n}","import React from 'react';\nimport { useSelector } from 'react-redux'\n\nexport default function MessagePopup(props) {\n    const isRunning = useSelector((state) => state.game.isRunning)\n    const gameOver = useSelector((state) => state.game.gameOver)\n    let message = ''\n    let isHidden = 'hidden'\n\n    if (gameOver) {\n        message = 'Game Over'\n        isHidden = ''\n    } else if (!isRunning) {\n        message = 'Paused'\n        isHidden = ''\n    }\n\n    return (\n        <div className={`message-popup ${isHidden}`}>\n            <h1>{message}</h1>\n        </div>\n    )\n}","import React from 'react';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport reducers from './reducers';\nimport './App.css';\n\nimport GridBoard from './components/GridBoard';\nimport NextBlock from './components/NextBlock';\nimport ScoreBoard from './components/ScoreBoard';\nimport Controls from './components/Controls';\nimport MessagePopup from './components/MessagePopup';\n\nconst store = createStore(reducers)\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <h1 className=\"App-title\">Tetrist</h1>\n        </header>\n        <GridBoard />\n        <NextBlock />\n        <ScoreBoard />\n        <Controls />\n\n        <MessagePopup />\n      </div>\n    </Provider>\n  );\n}\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}