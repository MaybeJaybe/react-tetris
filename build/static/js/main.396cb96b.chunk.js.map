{"version":3,"sources":["actions/index.js","utils/index.js","reducers/game-reducer.js","reducers/index.js","components/GridSquare.js","components/GridBoard.js","components/NextBlock.js","components/ScoreBoard.js","components/Controls.js","components/MessagePopup.js","App.js","reportWebVitals.js","index.js"],"names":["PAUSE","RESUME","MOVE_LEFT","MOVE_RIGHT","ROTATE","MOVE_DOWN","GAME_OVER","RESTART","gridDefault","array","row","push","col","shapes","randomShape","min","max","length","Math","floor","random","defaultState","grid","shape","rotation","x","y","nextShape","isRunning","score","speed","gameOver","nextRotation","canMoveTo","currentShape","proposedX","proposedY","possibleRow","undefined","gameReducer","state","action","type","newRotation","reducers","combineReducers","game","GridSquare","props","classes","color","className","GridBoard","useSelector","block","blockColor","gridSquares","map","rowArray","square","blockX","blockY","k","NextBlock","ScoreBoard","dispatch","useDispatch","onClick","e","Controls","MessagePopup","message","isHidden","store","createStore","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mNAAaA,EAAQ,QACRC,EAAS,SACTC,EAAY,YACZC,EAAa,aACbC,EAAS,SACTC,EAAY,YACZC,EAAY,YACZC,EAAU,UCHVC,G,KAAc,WAKvB,IAJA,IAEMC,EAAQ,GAELC,EAAM,EAAGA,EAJL,GAIiBA,IAAO,CACjCD,EAAME,KAAK,IACX,IAAK,IAAIC,EAAM,EAAGA,EALT,GAKqBA,IAC1BH,EAAMC,GAAKC,KAAK,GAGxB,OAAOF,IAGEI,EAAS,CAElB,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,KAGT,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,IAER,CAAC,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,KAGT,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,IAER,CAAC,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,IAER,CAAC,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,IAER,CAAC,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,KAGT,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,IAER,CAAC,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,IAER,CAAC,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,IAER,CAAC,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,KAGT,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,IAER,CAAC,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,IAER,CAAC,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,IAER,CAAC,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,KAGT,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,IAER,CAAC,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,KAGT,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,IAER,CAAC,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,KAGT,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EA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","file":"static/js/main.396cb96b.chunk.js","sourcesContent":["export const PAUSE = \"PAUSE\"\nexport const RESUME = \"RESUME\"\nexport const MOVE_LEFT = \"MOVE_LEFT\"\nexport const MOVE_RIGHT = \"MOVE_RIGHT\"\nexport const ROTATE = \"ROTATE\"\nexport const MOVE_DOWN = \"MOVE_DOWN\"\nexport const GAME_OVER = \"GAME_OVER\"\nexport const RESTART = \"RESTART\"\n\nexport const pause = () => {\n    return { type: PAUSE }\n}\nexport const resume = () => {\n    return { type: RESUME }\n}\nexport const moveLeft = () => {\n    return { type: MOVE_LEFT }\n}\nexport const moveRight = () => {\n    return { type: MOVE_RIGHT }\n}\nexport const rotate = () => {\n    return { type: ROTATE }\n}\nexport const moveDown = () => {\n    return { type: MOVE_DOWN }\n}\nexport const restart = () => {\n    return { type: RESTART }\n}","export const random = (min, max) => {\n    return Math.floor(Math.random() * (max - min + 1)) + min\n}\n\nexport const gridDefault = () => {\n    const rows = 18\n    const cols = 10\n    const array = []\n\n    for (let row = 0; row < rows; row++) {\n        array.push([])\n        for (let col = 0; col < cols; col++) {\n            array[row].push(0)\n        }\n    }\n    return array\n}\n\nexport const shapes = [\n    // blank\n    [[[0,0,0,0],\n      [0,0,0,0],\n      [0,0,0,0],\n      [0,0,0,0]]],\n\n    // I\n    [[[0,0,0,0],\n      [1,1,1,1],\n      [0,0,0,0],\n      [0,0,0,0]],\n\n     [[0,1,0,0],\n      [0,1,0,0],\n      [0,1,0,0],\n      [0,1,0,0]]],\n\n    // T\n    [[[0,0,0,0],\n      [1,1,1,0],\n      [0,1,0,0],\n      [0,0,0,0]],\n\n     [[0,1,0,0],\n      [1,1,0,0],\n      [0,1,0,0],\n      [0,0,0,0]],\n\n     [[0,1,0,0],\n      [1,1,1,0],\n      [0,0,0,0],\n      [0,0,0,0]],\n  \n     [[0,1,0,0],\n      [0,1,1,0],\n      [0,1,0,0],\n      [0,0,0,0]]],\n\n    // L\n    [[[0,0,0,0],\n      [1,1,1,0],\n      [1,0,0,0],\n      [0,0,0,0]],\n\n     [[1,1,0,0],\n      [0,1,0,0],\n      [0,1,0,0],\n      [0,0,0,0]],\n\n     [[0,0,1,0],\n      [1,1,1,0],\n      [0,0,0,0],\n      [0,0,0,0]],\n\n     [[0,1,0,0],\n      [0,1,0,0],\n      [0,1,1,0],\n      [0,0,0,0]]],\n\n    // J\n    [[[1,0,0,0],\n      [1,1,1,0],\n      [0,0,0,0],\n      [0,0,0,0]],\n\n     [[0,1,1,0],\n      [0,1,0,0],\n      [0,1,0,0],\n      [0,0,0,0]],\n\n     [[0,0,0,0],\n      [1,1,1,0],\n      [0,0,1,0],\n      [0,0,0,0]],\n\n     [[0,1,0,0],\n      [0,1,0,0],\n      [1,1,0,0],\n      [0,0,0,0]]],\n\n    // Z\n    [[[0,0,0,0],\n      [1,1,0,0],\n      [0,1,1,0],\n      [0,0,0,0]],\n\n     [[0,0,0,0],\n      [0,0,1,0],\n      [0,1,1,0],\n      [0,1,0,0]]],\n\n    // S\n    [[[0,0,0,0],\n      [0,1,1,0],\n      [1,1,0,0],\n      [0,0,0,0]],\n\n     [[0,1,0,0],\n      [0,1,1,0],\n      [0,0,1,0],\n      [0,0,0,0]]],\n\n    // O\n    [[[0,0,0,0],\n      [0,1,1,0],\n      [0,1,1,0],\n      [0,0,0,0]]]\n]\n\nexport const randomShape = () => {\n    return random(1, shapes.length - 1)\n}\n\nexport const defaultState = () => {\n    return {\n        grid: gridDefault(),\n        shape: randomShape(),\n        rotation: 0,\n        x: 5,\n        y: -4,\n        nextShape: randomShape(),\n        isRunning: true,\n        score: 0,\n        speed: 1000,\n        gameOver: false,\n    }\n}\n\nexport const nextRotation = (shape, rotation) => {\n    return (rotation + 1) % shapes[shape].length\n}\n\nexport const canMoveTo = (shape, grid, x, y, rotation) => {\n    const currentShape = shapes[shape][rotation]\n    for (let row = 0; row < currentShape.length; row++) {\n        for (let col = 0; col < currentShape[row].length; col++) {\n            if (currentShape[row][col] !== 0) {\n                const proposedX = col + x\n                const proposedY = row + y\n                if (proposedY < 0) {\n                    continue\n                }\n                const possibleRow = grid[proposedY]\n                if (possibleRow) {\n                    if (possibleRow[proposedX] === undefined || possibleRow[proposedX] !== 0) {\n                        return false\n                    }\n                } else {\n                    return false\n                }\n            }\n        }\n    }\n    return true\n}\n\nexport const addBlockToGrid = (shape, grid, x, y, rotation) => {\n    const block = shapes[shape][rotation];\n    const newGrid = [...grid];\n    for (let row = 0; row < block.length; row++) {\n        for (let col = 0; col < block[row].length; col++) {\n            if (block[row][col]) {\n                newGrid[row + y][col + x] = shape;\n            }\n        }\n    }\n    return newGrid;\n}\n\nexport const checkRows = (grid) => {\n    const points = [0, 40, 100, 300, 1200]\n    let completedRows = 0\n    for (let row = 0; row < grid.length; row++) {\n        if (grid[row].indexOf(0) === -1) {\n            completedRows += 1\n            grid.splice(row, 1)\n            grid.unshift(Array(10).fill(0))\n        }\n    }\n    return points[completedRows]\n}","import { PAUSE, RESUME, MOVE_LEFT, MOVE_RIGHT, ROTATE, MOVE_DOWN, GAME_OVER, RESTART } from '../actions'\nimport { defaultState, nextRotation, canMoveTo } from '../utils'\n\nconst gameReducer = (state = defaultState(), action) => {\n    const { shape, grid, x, y, rotation, nextShape, score, isRunning } = state\n\n    switch(action.type) {\n        case PAUSE:\n            return state\n        case RESUME:\n            return state\n        case MOVE_LEFT:\n            if (canMoveTo(shape, grid, x - 1, y, rotation)) {\n                return { ...state, x: x - 1 }\n            }\n            return state\n        case MOVE_RIGHT:\n            if (canMoveTo(shape, grid, x + 1, y, rotation)) {\n                return { ...state, x: x + 1 }\n            }\n            return state\n        case ROTATE:\n            const newRotation = nextRotation(shape, rotation)\n            if (canMoveTo(shape, grid, x, y, newRotation)) {\n                return { ...state, rotation: newRotation }\n            }\n            return state\n        case MOVE_DOWN:\n            return state\n        case GAME_OVER:\n            return state\n        case RESTART:\n            return state\n        default:\n            return state\n    }\n}\nexport default gameReducer","import { combineReducers } from 'redux'\nimport gameReducer from './game-reducer'\n\nconst reducers = combineReducers({\n    game: gameReducer\n})\nexport default reducers","import React from 'react'\n\nexport default function GridSquare(props) {\n    const classes = `grid-square color-${props.color}`\n    return <div className={classes} />\n}","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { shapes } from '../utils';\nimport GridSquare from './GridSquare';\n\nexport default function GridBoard(props) {\n    const game = useSelector((state) => state.game)\n    const { grid, shape, rotation, x, y, isRunning, speed } = game\n    const block = shapes[shape][rotation]\n    const blockColor = shape\n    const gridSquares = grid.map((rowArray, row) => {\n        return rowArray.map((square, col) => {\n            const blockX = col - x\n            const blockY = row - y\n            let color = square\n            if (blockX >= 0 && blockX < block.length && blockY >= 0 && blockY < block.length) {\n                color = block[blockY][blockX] === 0 ? color : blockColor\n            }\n            const k = row * grid[0].length + col;\n            return <GridSquare key={k} color={color} />\n        })\n    })\n\n    return (\n        <div className='grid-board'>\n            {gridSquares}\n        </div>\n    )\n}","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { shapes } from '../utils';\nimport GridSquare from './GridSquare';\n\nexport default function NextBlock(props) {\n    const nextShape = useSelector((state) => state.game.nextShape)\n    const box = shapes[nextShape][0]\n    const grid = box.map((rowArray, row) => {\n        return rowArray.map((square, col) => {\n            return <GridSquare key={`${row}${col}`} color={square} />\n        })\n    })\n    return (\n        <div className=\"next-block\">\n            {grid}\n        </div>\n    )\n}","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { pause, resume, restart } from '../actions';\n\nexport default function ScoreBoard(props) {\n    const dispatch = useDispatch()\n    const game = useSelector((state) => state.game)\n    const { score, isRunning, gameOver } = game\n\n    return (\n        <div className=\"score-board\">\n            <div>Score:{ score }</div>\n            <div>Level: 1</div>\n            <button className=\"score-board-button\" onClick={(e) => {\n                if (gameOver) { return }\n                if (isRunning) {\n                    dispatch(pause())\n                } else {\n                    dispatch(resume())\n                }\n            }}>{isRunning ? 'Pause' : 'Play'}</button>\n\n            <button className=\"score-board-button\" onClick={(e) => {\n                dispatch(restart())\n            }}>Restart</button>\n        </div>\n    )\n}","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { moveLeft, moveRight, rotate, moveDown } from '../actions'\n\nexport default function Controls(props) {\n    const dispatch = useDispatch()\n    const isRunning = useSelector((state) => state.isRunning)\n    return (\n        <div className=\"controls\">\n            <button className=\"control-button\" onClick={(e) => {\n                dispatch(moveLeft())\n            }}>Left</button>\n            <button className=\"control-button\" onClick={(e) => {\n                dispatch(moveRight())\n            }}>Right</button>\n            <button className=\"control-button\" onClick={(e) => {\n                dispatch(rotate())\n            }}>Rotate</button>\n            <button className=\"control-button\" onClick={(e) => {\n                dispatch(moveDown())\n            }}>Down</button>\n        </div>\n    )\n}","import React from 'react';\nimport { useSelector } from 'react-redux'\n\nexport default function MessagePopup(props) {\n    const isRunning = useSelector((state) => state.game.isRunning)\n    const gameOver = useSelector((state) => state.game.gameOver)\n    let message = ''\n    let isHidden = 'hidden'\n\n    if (gameOver) {\n        message = 'Game Over'\n        isHidden = ''\n    } else if (!isRunning) {\n        message = 'Paused'\n        isHidden = ''\n    }\n\n    return (\n        <div className={`message-popup ${isHidden}`}>\n            <h1>{message}</h1>\n        </div>\n    )\n}","import React from 'react';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport reducers from './reducers';\nimport './App.css';\n\nimport GridBoard from './components/GridBoard';\nimport NextBlock from './components/NextBlock';\nimport ScoreBoard from './components/ScoreBoard';\nimport Controls from './components/Controls';\nimport MessagePopup from './components/MessagePopup';\n\nconst store = createStore(reducers)\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <h1 className=\"App-title\">Tetrist</h1>\n        </header>\n        <GridBoard />\n        <NextBlock />\n        <ScoreBoard />\n        <Controls />\n\n        <MessagePopup />\n      </div>\n    </Provider>\n  );\n}\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}